package com.platon.privacy.contracts;

import com.alaya.abi.wasm.WasmEventEncoder;
import com.alaya.abi.wasm.WasmFunctionEncoder;
import com.alaya.abi.wasm.datatypes.WasmEvent;
import com.alaya.abi.wasm.datatypes.WasmEventParameter;
import com.alaya.abi.wasm.datatypes.WasmFunction;
import com.alaya.crypto.Credentials;
import com.alaya.protocol.Web3j;
import com.alaya.protocol.core.DefaultBlockParameter;
import com.alaya.protocol.core.RemoteCall;
import com.alaya.protocol.core.methods.request.PlatonFilter;
import com.alaya.protocol.core.methods.response.Log;
import com.alaya.protocol.core.methods.response.TransactionReceipt;
import com.alaya.rlp.wasm.datatypes.Uint128;
import com.alaya.rlp.wasm.datatypes.WasmAddress;
import com.alaya.tx.TransactionManager;
import com.alaya.tx.WasmContract;
import com.alaya.tx.gas.GasProvider;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import rx.Observable;
import rx.functions.Func1;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://github.com/PlatONnetwork/client-sdk-java/releases">platon-web3j command line tools</a>,
 * or the com.alaya.codegen.WasmFunctionWrapperGenerator in the 
 * <a href="https://github.com/PlatONnetwork/client-sdk-java/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with platon-web3j version none.
 */
public class Token_manager extends WasmContract {
    private static String BINARY_0 = "";

    public static String BINARY = BINARY_0;

    public static final String FUNC_SETOWNER = "SetOwner";

    public static final String FUNC_GETOWNER = "GetOwner";

    public static final String FUNC_DEPOSIT = "Deposit";

    public static final String FUNC_WITHDRAW = "Withdraw";

    public static final WasmEvent TRANSFEREVENT_EVENT = new WasmEvent("TransferEvent", Arrays.asList(new WasmEventParameter(WasmAddress.class, true) , new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(Uint128.class)));
    ;

    public static final WasmEvent PRIVACYREVERTEVENT_EVENT = new WasmEvent("PrivacyRevertEvent", Arrays.asList(), Arrays.asList(new WasmEventParameter(String.class)));
    ;

    public static final WasmEvent APPROVALEVENT_EVENT = new WasmEvent("ApprovalEvent", Arrays.asList(new WasmEventParameter(WasmAddress.class, true) , new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(Uint128.class)));
    ;

    protected Token_manager(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider, chainId);
    }

    protected Token_manager(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider, chainId);
    }

    public List<TransferEventEventResponse> getTransferEventEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFEREVENT_EVENT, transactionReceipt);
        ArrayList<TransferEventEventResponse> responses = new ArrayList<TransferEventEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            TransferEventEventResponse typedResponse = new TransferEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
            typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
            typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<TransferEventEventResponse> transferEventEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, TransferEventEventResponse>() {
            @Override
            public TransferEventEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFEREVENT_EVENT, log);
                TransferEventEventResponse typedResponse = new TransferEventEventResponse();
                typedResponse.log = log;
                typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
                typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
                typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<TransferEventEventResponse> transferEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(TRANSFEREVENT_EVENT));
        return transferEventEventObservable(filter);
    }

    public List<PrivacyRevertEventEventResponse> getPrivacyRevertEventEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(PRIVACYREVERTEVENT_EVENT, transactionReceipt);
        ArrayList<PrivacyRevertEventEventResponse> responses = new ArrayList<PrivacyRevertEventEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            PrivacyRevertEventEventResponse typedResponse = new PrivacyRevertEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.arg1 = (String) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<PrivacyRevertEventEventResponse> privacyRevertEventEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, PrivacyRevertEventEventResponse>() {
            @Override
            public PrivacyRevertEventEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(PRIVACYREVERTEVENT_EVENT, log);
                PrivacyRevertEventEventResponse typedResponse = new PrivacyRevertEventEventResponse();
                typedResponse.log = log;
                typedResponse.arg1 = (String) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<PrivacyRevertEventEventResponse> privacyRevertEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(PRIVACYREVERTEVENT_EVENT));
        return privacyRevertEventEventObservable(filter);
    }

    public List<ApprovalEventEventResponse> getApprovalEventEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(APPROVALEVENT_EVENT, transactionReceipt);
        ArrayList<ApprovalEventEventResponse> responses = new ArrayList<ApprovalEventEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            ApprovalEventEventResponse typedResponse = new ApprovalEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
            typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
            typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ApprovalEventEventResponse> approvalEventEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, ApprovalEventEventResponse>() {
            @Override
            public ApprovalEventEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(APPROVALEVENT_EVENT, log);
                ApprovalEventEventResponse typedResponse = new ApprovalEventEventResponse();
                typedResponse.log = log;
                typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
                typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
                typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<ApprovalEventEventResponse> approvalEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(APPROVALEVENT_EVENT));
        return approvalEventEventObservable(filter);
    }

    public static RemoteCall<Token_manager> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId, WasmAddress owner) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList(owner));
        return deployRemoteCall(Token_manager.class, web3j, credentials, contractGasProvider, encodedConstructor, chainId);
    }

    public static RemoteCall<Token_manager> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId, WasmAddress owner) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList(owner));
        return deployRemoteCall(Token_manager.class, web3j, transactionManager, contractGasProvider, encodedConstructor, chainId);
    }

    public static RemoteCall<Token_manager> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, BigInteger initialVonValue, Long chainId, WasmAddress owner) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList(owner));
        return deployRemoteCall(Token_manager.class, web3j, credentials, contractGasProvider, encodedConstructor, initialVonValue, chainId);
    }

    public static RemoteCall<Token_manager> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, BigInteger initialVonValue, Long chainId, WasmAddress owner) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList(owner));
        return deployRemoteCall(Token_manager.class, web3j, transactionManager, contractGasProvider, encodedConstructor, initialVonValue, chainId);
    }

    public RemoteCall<TransactionReceipt> SetOwner(WasmAddress owner) {
        final WasmFunction function = new WasmFunction(FUNC_SETOWNER, Arrays.asList(owner), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> SetOwner(WasmAddress owner, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_SETOWNER, Arrays.asList(owner), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<WasmAddress> GetOwner() {
        final WasmFunction function = new WasmFunction(FUNC_GETOWNER, Arrays.asList(), WasmAddress.class);
        return executeRemoteCall(function, WasmAddress.class);
    }

    public RemoteCall<TransactionReceipt> Deposit(WasmAddress token_address, WasmAddress public_owner, Uint128 value) {
        final WasmFunction function = new WasmFunction(FUNC_DEPOSIT, Arrays.asList(token_address,public_owner,value), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> Deposit(WasmAddress token_address, WasmAddress public_owner, Uint128 value, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_DEPOSIT, Arrays.asList(token_address,public_owner,value), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> Withdraw(WasmAddress token_address, WasmAddress public_owner, Uint128 value) {
        final WasmFunction function = new WasmFunction(FUNC_WITHDRAW, Arrays.asList(token_address,public_owner,value), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> Withdraw(WasmAddress token_address, WasmAddress public_owner, Uint128 value, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_WITHDRAW, Arrays.asList(token_address,public_owner,value), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public static Token_manager load(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        return new Token_manager(contractAddress, web3j, credentials, contractGasProvider, chainId);
    }

    public static Token_manager load(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        return new Token_manager(contractAddress, web3j, transactionManager, contractGasProvider, chainId);
    }

    public static class TransferEventEventResponse {
        public Log log;

        public String topic1;

        public String topic2;

        public Uint128 arg1;
    }

    public static class PrivacyRevertEventEventResponse {
        public Log log;

        public String arg1;
    }

    public static class ApprovalEventEventResponse {
        public Log log;

        public String topic1;

        public String topic2;

        public Uint128 arg1;
    }
}
