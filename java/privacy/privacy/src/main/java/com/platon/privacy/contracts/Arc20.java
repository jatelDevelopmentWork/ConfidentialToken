package com.platon.privacy.contracts;

import com.alaya.abi.wasm.WasmEventEncoder;
import com.alaya.abi.wasm.WasmFunctionEncoder;
import com.alaya.abi.wasm.datatypes.WasmEvent;
import com.alaya.abi.wasm.datatypes.WasmEventParameter;
import com.alaya.abi.wasm.datatypes.WasmFunction;
import com.alaya.crypto.Credentials;
import com.alaya.protocol.Web3j;
import com.alaya.protocol.core.DefaultBlockParameter;
import com.alaya.protocol.core.RemoteCall;
import com.alaya.protocol.core.methods.request.PlatonFilter;
import com.alaya.protocol.core.methods.response.Log;
import com.alaya.protocol.core.methods.response.TransactionReceipt;
import com.alaya.rlp.wasm.datatypes.Uint128;
import com.alaya.rlp.wasm.datatypes.Uint8;
import com.alaya.rlp.wasm.datatypes.WasmAddress;
import com.alaya.tx.TransactionManager;
import com.alaya.tx.WasmContract;
import com.alaya.tx.gas.GasProvider;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import rx.Observable;
import rx.functions.Func1;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://github.com/PlatONnetwork/client-sdk-java/releases">platon-web3j command line tools</a>,
 * or the com.alaya.codegen.WasmFunctionWrapperGenerator in the 
 * <a href="https://github.com/PlatONnetwork/client-sdk-java/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with platon-web3j version none.
 */
public class Arc20 extends WasmContract {
    private static String BINARY_0 = "";

    public static String BINARY = BINARY_0;

    public static final String FUNC_BURN = "Burn";

    public static final String FUNC_GETNAME = "GetName";

    public static final String FUNC_GETSYMBOL = "GetSymbol";

    public static final String FUNC_GETDECIMALS = "GetDecimals";

    public static final String FUNC_GETTOTALSUPPLY = "GetTotalSupply";

    public static final String FUNC_BALANCEOF = "BalanceOf";

    public static final String FUNC_ALLOWANCE = "Allowance";

    public static final String FUNC_TRANSFER = "Transfer";

    public static final String FUNC_TRANSFERFROM = "TransferFrom";

    public static final String FUNC_APPROVE = "Approve";

    public static final String FUNC_INCREASEAPPROVE = "IncreaseApprove";

    public static final String FUNC_DECREASEAPPROVE = "DecreaseApprove";

    public static final String FUNC_MINT = "Mint";

    public static final WasmEvent TRANSFEREVENT_EVENT = new WasmEvent("TransferEvent", Arrays.asList(new WasmEventParameter(WasmAddress.class, true) , new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(Uint128.class)));
    ;

    public static final WasmEvent PRIVACYREVERTEVENT_EVENT = new WasmEvent("PrivacyRevertEvent", Arrays.asList(), Arrays.asList(new WasmEventParameter(String.class)));
    ;

    public static final WasmEvent APPROVALEVENT_EVENT = new WasmEvent("ApprovalEvent", Arrays.asList(new WasmEventParameter(WasmAddress.class, true) , new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(Uint128.class)));
    ;

    public static final WasmEvent MINTEVENT_EVENT = new WasmEvent("MintEvent", Arrays.asList(new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(Uint128.class)));
    ;

    public static final WasmEvent BURNEVENT_EVENT = new WasmEvent("BurnEvent", Arrays.asList(new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(Uint128.class)));
    ;

    protected Arc20(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider, chainId);
    }

    protected Arc20(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider, chainId);
    }

    public List<TransferEventEventResponse> getTransferEventEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFEREVENT_EVENT, transactionReceipt);
        ArrayList<TransferEventEventResponse> responses = new ArrayList<TransferEventEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            TransferEventEventResponse typedResponse = new TransferEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
            typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
            typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<TransferEventEventResponse> transferEventEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, TransferEventEventResponse>() {
            @Override
            public TransferEventEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFEREVENT_EVENT, log);
                TransferEventEventResponse typedResponse = new TransferEventEventResponse();
                typedResponse.log = log;
                typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
                typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
                typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<TransferEventEventResponse> transferEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(TRANSFEREVENT_EVENT));
        return transferEventEventObservable(filter);
    }

    public RemoteCall<TransactionReceipt> Burn(WasmAddress account, Uint128 value) {
        final WasmFunction function = new WasmFunction(FUNC_BURN, Arrays.asList(account,value), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> Burn(WasmAddress account, Uint128 value, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_BURN, Arrays.asList(account,value), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public List<PrivacyRevertEventEventResponse> getPrivacyRevertEventEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(PRIVACYREVERTEVENT_EVENT, transactionReceipt);
        ArrayList<PrivacyRevertEventEventResponse> responses = new ArrayList<PrivacyRevertEventEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            PrivacyRevertEventEventResponse typedResponse = new PrivacyRevertEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.arg1 = (String) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<PrivacyRevertEventEventResponse> privacyRevertEventEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, PrivacyRevertEventEventResponse>() {
            @Override
            public PrivacyRevertEventEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(PRIVACYREVERTEVENT_EVENT, log);
                PrivacyRevertEventEventResponse typedResponse = new PrivacyRevertEventEventResponse();
                typedResponse.log = log;
                typedResponse.arg1 = (String) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<PrivacyRevertEventEventResponse> privacyRevertEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(PRIVACYREVERTEVENT_EVENT));
        return privacyRevertEventEventObservable(filter);
    }

    public List<ApprovalEventEventResponse> getApprovalEventEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(APPROVALEVENT_EVENT, transactionReceipt);
        ArrayList<ApprovalEventEventResponse> responses = new ArrayList<ApprovalEventEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            ApprovalEventEventResponse typedResponse = new ApprovalEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
            typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
            typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ApprovalEventEventResponse> approvalEventEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, ApprovalEventEventResponse>() {
            @Override
            public ApprovalEventEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(APPROVALEVENT_EVENT, log);
                ApprovalEventEventResponse typedResponse = new ApprovalEventEventResponse();
                typedResponse.log = log;
                typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
                typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
                typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<ApprovalEventEventResponse> approvalEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(APPROVALEVENT_EVENT));
        return approvalEventEventObservable(filter);
    }

    public RemoteCall<String> GetName() {
        final WasmFunction function = new WasmFunction(FUNC_GETNAME, Arrays.asList(), String.class);
        return executeRemoteCall(function, String.class);
    }

    public RemoteCall<String> GetSymbol() {
        final WasmFunction function = new WasmFunction(FUNC_GETSYMBOL, Arrays.asList(), String.class);
        return executeRemoteCall(function, String.class);
    }

    public static RemoteCall<Arc20> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId, String token_name, String token_symbol, Uint128 initial_amount, Uint8 decimal_units) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList(token_name,token_symbol,initial_amount,decimal_units));
        return deployRemoteCall(Arc20.class, web3j, credentials, contractGasProvider, encodedConstructor, chainId);
    }

    public static RemoteCall<Arc20> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId, String token_name, String token_symbol, Uint128 initial_amount, Uint8 decimal_units) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList(token_name,token_symbol,initial_amount,decimal_units));
        return deployRemoteCall(Arc20.class, web3j, transactionManager, contractGasProvider, encodedConstructor, chainId);
    }

    public static RemoteCall<Arc20> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, BigInteger initialVonValue, Long chainId, String token_name, String token_symbol, Uint128 initial_amount, Uint8 decimal_units) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList(token_name,token_symbol,initial_amount,decimal_units));
        return deployRemoteCall(Arc20.class, web3j, credentials, contractGasProvider, encodedConstructor, initialVonValue, chainId);
    }

    public static RemoteCall<Arc20> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, BigInteger initialVonValue, Long chainId, String token_name, String token_symbol, Uint128 initial_amount, Uint8 decimal_units) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList(token_name,token_symbol,initial_amount,decimal_units));
        return deployRemoteCall(Arc20.class, web3j, transactionManager, contractGasProvider, encodedConstructor, initialVonValue, chainId);
    }

    public RemoteCall<Uint8> GetDecimals() {
        final WasmFunction function = new WasmFunction(FUNC_GETDECIMALS, Arrays.asList(), Uint8.class);
        return executeRemoteCall(function, Uint8.class);
    }

    public RemoteCall<Uint128> GetTotalSupply() {
        final WasmFunction function = new WasmFunction(FUNC_GETTOTALSUPPLY, Arrays.asList(), Uint128.class);
        return executeRemoteCall(function, Uint128.class);
    }

    public RemoteCall<Uint128> BalanceOf(WasmAddress owner) {
        final WasmFunction function = new WasmFunction(FUNC_BALANCEOF, Arrays.asList(owner), Uint128.class);
        return executeRemoteCall(function, Uint128.class);
    }

    public RemoteCall<Uint128> Allowance(WasmAddress owner, WasmAddress spender) {
        final WasmFunction function = new WasmFunction(FUNC_ALLOWANCE, Arrays.asList(owner,spender), Uint128.class);
        return executeRemoteCall(function, Uint128.class);
    }

    public RemoteCall<TransactionReceipt> Transfer(WasmAddress to, Uint128 value) {
        final WasmFunction function = new WasmFunction(FUNC_TRANSFER, Arrays.asList(to,value), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> Transfer(WasmAddress to, Uint128 value, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_TRANSFER, Arrays.asList(to,value), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> TransferFrom(WasmAddress from, WasmAddress to, Uint128 value) {
        final WasmFunction function = new WasmFunction(FUNC_TRANSFERFROM, Arrays.asList(from,to,value), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> TransferFrom(WasmAddress from, WasmAddress to, Uint128 value, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_TRANSFERFROM, Arrays.asList(from,to,value), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> Approve(WasmAddress spender, Uint128 value) {
        final WasmFunction function = new WasmFunction(FUNC_APPROVE, Arrays.asList(spender,value), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> Approve(WasmAddress spender, Uint128 value, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_APPROVE, Arrays.asList(spender,value), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> IncreaseApprove(WasmAddress spender, Uint128 value) {
        final WasmFunction function = new WasmFunction(FUNC_INCREASEAPPROVE, Arrays.asList(spender,value), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> IncreaseApprove(WasmAddress spender, Uint128 value, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_INCREASEAPPROVE, Arrays.asList(spender,value), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> DecreaseApprove(WasmAddress spender, Uint128 value) {
        final WasmFunction function = new WasmFunction(FUNC_DECREASEAPPROVE, Arrays.asList(spender,value), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> DecreaseApprove(WasmAddress spender, Uint128 value, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_DECREASEAPPROVE, Arrays.asList(spender,value), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> Mint(WasmAddress account, Uint128 value) {
        final WasmFunction function = new WasmFunction(FUNC_MINT, Arrays.asList(account,value), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> Mint(WasmAddress account, Uint128 value, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_MINT, Arrays.asList(account,value), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public List<MintEventEventResponse> getMintEventEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(MINTEVENT_EVENT, transactionReceipt);
        ArrayList<MintEventEventResponse> responses = new ArrayList<MintEventEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            MintEventEventResponse typedResponse = new MintEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<MintEventEventResponse> mintEventEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, MintEventEventResponse>() {
            @Override
            public MintEventEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(MINTEVENT_EVENT, log);
                MintEventEventResponse typedResponse = new MintEventEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<MintEventEventResponse> mintEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(MINTEVENT_EVENT));
        return mintEventEventObservable(filter);
    }

    public List<BurnEventEventResponse> getBurnEventEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(BURNEVENT_EVENT, transactionReceipt);
        ArrayList<BurnEventEventResponse> responses = new ArrayList<BurnEventEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            BurnEventEventResponse typedResponse = new BurnEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<BurnEventEventResponse> burnEventEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, BurnEventEventResponse>() {
            @Override
            public BurnEventEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(BURNEVENT_EVENT, log);
                BurnEventEventResponse typedResponse = new BurnEventEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<BurnEventEventResponse> burnEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(BURNEVENT_EVENT));
        return burnEventEventObservable(filter);
    }

    public static Arc20 load(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        return new Arc20(contractAddress, web3j, credentials, contractGasProvider, chainId);
    }

    public static Arc20 load(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        return new Arc20(contractAddress, web3j, transactionManager, contractGasProvider, chainId);
    }

    public static class TransferEventEventResponse {
        public Log log;

        public String topic1;

        public String topic2;

        public Uint128 arg1;
    }

    public static class PrivacyRevertEventEventResponse {
        public Log log;

        public String arg1;
    }

    public static class ApprovalEventEventResponse {
        public Log log;

        public String topic1;

        public String topic2;

        public Uint128 arg1;
    }

    public static class MintEventEventResponse {
        public Log log;

        public String topic;

        public Uint128 arg1;
    }

    public static class BurnEventEventResponse {
        public Log log;

        public String topic;

        public Uint128 arg1;
    }
}
