package com.platon.privacy.contracts;

import com.alaya.abi.wasm.WasmEventEncoder;
import com.alaya.abi.wasm.WasmFunctionEncoder;
import com.alaya.abi.wasm.datatypes.WasmEvent;
import com.alaya.abi.wasm.datatypes.WasmEventParameter;
import com.alaya.abi.wasm.datatypes.WasmFunction;
import com.alaya.crypto.Credentials;
import com.alaya.protocol.Web3j;
import com.alaya.protocol.core.DefaultBlockParameter;
import com.alaya.protocol.core.RemoteCall;
import com.alaya.protocol.core.methods.request.PlatonFilter;
import com.alaya.protocol.core.methods.response.Log;
import com.alaya.protocol.core.methods.response.TransactionReceipt;
import com.alaya.rlp.wasm.datatypes.Uint128;
import com.alaya.rlp.wasm.datatypes.Uint32;
import com.alaya.rlp.wasm.datatypes.WasmAddress;
import com.alaya.tx.TransactionManager;
import com.alaya.tx.WasmContract;
import com.alaya.tx.gas.GasProvider;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import rx.Observable;
import rx.functions.Func1;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://github.com/PlatONnetwork/client-sdk-java/releases">platon-web3j command line tools</a>,
 * or the com.alaya.codegen.WasmFunctionWrapperGenerator in the 
 * <a href="https://github.com/PlatONnetwork/client-sdk-java/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with platon-web3j version none.
 */
public class Confidential_token extends WasmContract {
    private static String BINARY_0 = "";

    public static String BINARY = BINARY_0;

    public static final String FUNC_BURN = "Burn";

    public static final String FUNC_TRANSFER = "Transfer";

    public static final String FUNC_APPROVE = "Approve";

    public static final String FUNC_GETAPPROVAL = "GetApproval";

    public static final String FUNC_GETACL = "GetAcl";

    public static final String FUNC_UPDATEMETADATA = "UpdateMetaData";

    public static final String FUNC_NAME = "Name";

    public static final String FUNC_SYMBOL = "Symbol";

    public static final String FUNC_SCALINGFACTOR = "ScalingFactor";

    public static final String FUNC_TOTALSUPPLY = "TotalSupply";

    public static final String FUNC_UPDATEVALIDATOR = "UpdateValidator";

    public static final String FUNC_UPDATESTORAGE = "UpdateStorage";

    public static final String FUNC_SUPPORTPROOF = "SupportProof";

    public static final String FUNC_MINT = "Mint";

    public static final WasmEvent PRIVACYREVERTEVENT_EVENT = new WasmEvent("PrivacyRevertEvent", Arrays.asList(), Arrays.asList(new WasmEventParameter(String.class)));
    ;

    public static final WasmEvent TRANSFEREVENT_EVENT = new WasmEvent("TransferEvent", Arrays.asList(new WasmEventParameter(WasmAddress.class, true) , new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(Uint128.class)));
    ;

    public static final WasmEvent APPROVALEVENT_EVENT = new WasmEvent("ApprovalEvent", Arrays.asList(new WasmEventParameter(WasmAddress.class, true) , new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(Uint128.class)));
    ;

    public static final WasmEvent BURNEVENT_EVENT = new WasmEvent("BurnEvent", Arrays.asList(), Arrays.asList(new WasmEventParameter(byte[].class) , new WasmEventParameter(Uint128.class)));
    ;

    public static final WasmEvent APPROVEEVENT_EVENT = new WasmEvent("ApproveEvent", Arrays.asList(new WasmEventParameter(byte[].class, true)), Arrays.asList(new WasmEventParameter(byte[].class)));
    ;

    public static final WasmEvent CREATENOTEEVENT_EVENT = new WasmEvent("CreateNoteEvent", Arrays.asList(new WasmEventParameter(byte[].class, true) , new WasmEventParameter(byte[].class, true)), Arrays.asList(new WasmEventParameter(byte[].class)));
    ;

    public static final WasmEvent DESTROYNOTEEVENT_EVENT = new WasmEvent("DestroyNoteEvent", Arrays.asList(new WasmEventParameter(byte[].class, true) , new WasmEventParameter(byte[].class, true)), Arrays.asList(new WasmEventParameter(byte[].class)));
    ;

    public static final WasmEvent METADATAEVENT_EVENT = new WasmEvent("MetaDataEvent", Arrays.asList(new WasmEventParameter(byte[].class, true)), Arrays.asList(new WasmEventParameter(byte[].class)));
    ;

    public static final WasmEvent MINTEVENT_EVENT = new WasmEvent("MintEvent", Arrays.asList(), Arrays.asList(new WasmEventParameter(byte[].class) , new WasmEventParameter(Uint128.class)));
    ;

    protected Confidential_token(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider, chainId);
    }

    protected Confidential_token(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider, chainId);
    }

    public List<PrivacyRevertEventEventResponse> getPrivacyRevertEventEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(PRIVACYREVERTEVENT_EVENT, transactionReceipt);
        ArrayList<PrivacyRevertEventEventResponse> responses = new ArrayList<PrivacyRevertEventEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            PrivacyRevertEventEventResponse typedResponse = new PrivacyRevertEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.arg1 = (String) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<PrivacyRevertEventEventResponse> privacyRevertEventEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, PrivacyRevertEventEventResponse>() {
            @Override
            public PrivacyRevertEventEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(PRIVACYREVERTEVENT_EVENT, log);
                PrivacyRevertEventEventResponse typedResponse = new PrivacyRevertEventEventResponse();
                typedResponse.log = log;
                typedResponse.arg1 = (String) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<PrivacyRevertEventEventResponse> privacyRevertEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(PRIVACYREVERTEVENT_EVENT));
        return privacyRevertEventEventObservable(filter);
    }

    public List<TransferEventEventResponse> getTransferEventEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFEREVENT_EVENT, transactionReceipt);
        ArrayList<TransferEventEventResponse> responses = new ArrayList<TransferEventEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            TransferEventEventResponse typedResponse = new TransferEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
            typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
            typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<TransferEventEventResponse> transferEventEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, TransferEventEventResponse>() {
            @Override
            public TransferEventEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFEREVENT_EVENT, log);
                TransferEventEventResponse typedResponse = new TransferEventEventResponse();
                typedResponse.log = log;
                typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
                typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
                typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<TransferEventEventResponse> transferEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(TRANSFEREVENT_EVENT));
        return transferEventEventObservable(filter);
    }

    public List<ApprovalEventEventResponse> getApprovalEventEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(APPROVALEVENT_EVENT, transactionReceipt);
        ArrayList<ApprovalEventEventResponse> responses = new ArrayList<ApprovalEventEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            ApprovalEventEventResponse typedResponse = new ApprovalEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
            typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
            typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ApprovalEventEventResponse> approvalEventEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, ApprovalEventEventResponse>() {
            @Override
            public ApprovalEventEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(APPROVALEVENT_EVENT, log);
                ApprovalEventEventResponse typedResponse = new ApprovalEventEventResponse();
                typedResponse.log = log;
                typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
                typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
                typedResponse.arg1 = (Uint128) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<ApprovalEventEventResponse> approvalEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(APPROVALEVENT_EVENT));
        return approvalEventEventObservable(filter);
    }

    public List<BurnEventEventResponse> getBurnEventEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(BURNEVENT_EVENT, transactionReceipt);
        ArrayList<BurnEventEventResponse> responses = new ArrayList<BurnEventEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            BurnEventEventResponse typedResponse = new BurnEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.arg1 = (byte[]) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (Uint128) eventValues.getNonIndexedValues().get(1);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<BurnEventEventResponse> burnEventEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, BurnEventEventResponse>() {
            @Override
            public BurnEventEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(BURNEVENT_EVENT, log);
                BurnEventEventResponse typedResponse = new BurnEventEventResponse();
                typedResponse.log = log;
                typedResponse.arg1 = (byte[]) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (Uint128) eventValues.getNonIndexedValues().get(1);
                return typedResponse;
            }
        });
    }

    public Observable<BurnEventEventResponse> burnEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(BURNEVENT_EVENT));
        return burnEventEventObservable(filter);
    }

    public List<ApproveEventEventResponse> getApproveEventEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(APPROVEEVENT_EVENT, transactionReceipt);
        ArrayList<ApproveEventEventResponse> responses = new ArrayList<ApproveEventEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            ApproveEventEventResponse typedResponse = new ApproveEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (byte[]) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<ApproveEventEventResponse> approveEventEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, ApproveEventEventResponse>() {
            @Override
            public ApproveEventEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(APPROVEEVENT_EVENT, log);
                ApproveEventEventResponse typedResponse = new ApproveEventEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (byte[]) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<ApproveEventEventResponse> approveEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(APPROVEEVENT_EVENT));
        return approveEventEventObservable(filter);
    }

    public List<CreateNoteEventEventResponse> getCreateNoteEventEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(CREATENOTEEVENT_EVENT, transactionReceipt);
        ArrayList<CreateNoteEventEventResponse> responses = new ArrayList<CreateNoteEventEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            CreateNoteEventEventResponse typedResponse = new CreateNoteEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
            typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
            typedResponse.arg1 = (byte[]) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<CreateNoteEventEventResponse> createNoteEventEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, CreateNoteEventEventResponse>() {
            @Override
            public CreateNoteEventEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(CREATENOTEEVENT_EVENT, log);
                CreateNoteEventEventResponse typedResponse = new CreateNoteEventEventResponse();
                typedResponse.log = log;
                typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
                typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
                typedResponse.arg1 = (byte[]) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<CreateNoteEventEventResponse> createNoteEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(CREATENOTEEVENT_EVENT));
        return createNoteEventEventObservable(filter);
    }

    public List<DestroyNoteEventEventResponse> getDestroyNoteEventEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(DESTROYNOTEEVENT_EVENT, transactionReceipt);
        ArrayList<DestroyNoteEventEventResponse> responses = new ArrayList<DestroyNoteEventEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            DestroyNoteEventEventResponse typedResponse = new DestroyNoteEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
            typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
            typedResponse.arg1 = (byte[]) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<DestroyNoteEventEventResponse> destroyNoteEventEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, DestroyNoteEventEventResponse>() {
            @Override
            public DestroyNoteEventEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(DESTROYNOTEEVENT_EVENT, log);
                DestroyNoteEventEventResponse typedResponse = new DestroyNoteEventEventResponse();
                typedResponse.log = log;
                typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
                typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
                typedResponse.arg1 = (byte[]) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<DestroyNoteEventEventResponse> destroyNoteEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(DESTROYNOTEEVENT_EVENT));
        return destroyNoteEventEventObservable(filter);
    }

    public RemoteCall<TransactionReceipt> Burn(byte[] proof) {
        final WasmFunction function = new WasmFunction(FUNC_BURN, Arrays.asList(proof, Void.class), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> Burn(byte[] proof, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_BURN, Arrays.asList(proof, Void.class), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public List<MetaDataEventEventResponse> getMetaDataEventEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(METADATAEVENT_EVENT, transactionReceipt);
        ArrayList<MetaDataEventEventResponse> responses = new ArrayList<MetaDataEventEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            MetaDataEventEventResponse typedResponse = new MetaDataEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (byte[]) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<MetaDataEventEventResponse> metaDataEventEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, MetaDataEventEventResponse>() {
            @Override
            public MetaDataEventEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(METADATAEVENT_EVENT, log);
                MetaDataEventEventResponse typedResponse = new MetaDataEventEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (byte[]) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<MetaDataEventEventResponse> metaDataEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(METADATAEVENT_EVENT));
        return metaDataEventEventObservable(filter);
    }

    public RemoteCall<TransactionReceipt> Transfer(byte[] proof) {
        final WasmFunction function = new WasmFunction(FUNC_TRANSFER, Arrays.asList(proof, Void.class), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> Transfer(byte[] proof, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_TRANSFER, Arrays.asList(proof, Void.class), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> Approve(byte[] shared_secret) {
        final WasmFunction function = new WasmFunction(FUNC_APPROVE, Arrays.asList(shared_secret, Void.class), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> Approve(byte[] shared_secret, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_APPROVE, Arrays.asList(shared_secret, Void.class), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<byte[]> GetApproval(byte[] note_hash) {
        final WasmFunction function = new WasmFunction(FUNC_GETAPPROVAL, Arrays.asList(note_hash, Void.class), byte[].class);
        return executeRemoteCall(function, byte[].class);
    }

    public RemoteCall<WasmAddress> GetAcl() {
        final WasmFunction function = new WasmFunction(FUNC_GETACL, Arrays.asList(), WasmAddress.class);
        return executeRemoteCall(function, WasmAddress.class);
    }

    public RemoteCall<TransactionReceipt> UpdateMetaData(byte[] note_hash, byte[] meta_data, byte[] signature) {
        final WasmFunction function = new WasmFunction(FUNC_UPDATEMETADATA, Arrays.asList(note_hash,meta_data,signature), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> UpdateMetaData(byte[] note_hash, byte[] meta_data, byte[] signature, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_UPDATEMETADATA, Arrays.asList(note_hash,meta_data,signature), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<String> Name() {
        final WasmFunction function = new WasmFunction(FUNC_NAME, Arrays.asList(), String.class);
        return executeRemoteCall(function, String.class);
    }

    public RemoteCall<String> Symbol() {
        final WasmFunction function = new WasmFunction(FUNC_SYMBOL, Arrays.asList(), String.class);
        return executeRemoteCall(function, String.class);
    }

    public RemoteCall<Uint128> ScalingFactor() {
        final WasmFunction function = new WasmFunction(FUNC_SCALINGFACTOR, Arrays.asList(), Uint128.class);
        return executeRemoteCall(function, Uint128.class);
    }

    public RemoteCall<Uint128> TotalSupply() {
        final WasmFunction function = new WasmFunction(FUNC_TOTALSUPPLY, Arrays.asList(), Uint128.class);
        return executeRemoteCall(function, Uint128.class);
    }

    public RemoteCall<TransactionReceipt> UpdateValidator(Uint32 version) {
        final WasmFunction function = new WasmFunction(FUNC_UPDATEVALIDATOR, Arrays.asList(version), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> UpdateValidator(Uint32 version, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_UPDATEVALIDATOR, Arrays.asList(version), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> UpdateStorage(Uint32 version) {
        final WasmFunction function = new WasmFunction(FUNC_UPDATESTORAGE, Arrays.asList(version), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> UpdateStorage(Uint32 version, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_UPDATESTORAGE, Arrays.asList(version), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<Boolean> SupportProof(Uint32 version) {
        final WasmFunction function = new WasmFunction(FUNC_SUPPORTPROOF, Arrays.asList(version), Boolean.class);
        return executeRemoteCall(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> Mint(byte[] proof) {
        final WasmFunction function = new WasmFunction(FUNC_MINT, Arrays.asList(proof, Void.class), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> Mint(byte[] proof, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_MINT, Arrays.asList(proof, Void.class), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public List<MintEventEventResponse> getMintEventEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(MINTEVENT_EVENT, transactionReceipt);
        ArrayList<MintEventEventResponse> responses = new ArrayList<MintEventEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            MintEventEventResponse typedResponse = new MintEventEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.arg1 = (byte[]) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (Uint128) eventValues.getNonIndexedValues().get(1);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<MintEventEventResponse> mintEventEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, MintEventEventResponse>() {
            @Override
            public MintEventEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(MINTEVENT_EVENT, log);
                MintEventEventResponse typedResponse = new MintEventEventResponse();
                typedResponse.log = log;
                typedResponse.arg1 = (byte[]) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (Uint128) eventValues.getNonIndexedValues().get(1);
                return typedResponse;
            }
        });
    }

    public Observable<MintEventEventResponse> mintEventEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(MINTEVENT_EVENT));
        return mintEventEventObservable(filter);
    }

    public static RemoteCall<Confidential_token> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId, String name, String symbol, WasmAddress registry_address, Uint32 validator_version, Uint32 storage_version, Uint128 scaling_factor, WasmAddress token_address) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList(name,symbol,registry_address,validator_version,storage_version,scaling_factor,token_address));
        return deployRemoteCall(Confidential_token.class, web3j, credentials, contractGasProvider, encodedConstructor, chainId);
    }

    public static RemoteCall<Confidential_token> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId, String name, String symbol, WasmAddress registry_address, Uint32 validator_version, Uint32 storage_version, Uint128 scaling_factor, WasmAddress token_address) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList(name,symbol,registry_address,validator_version,storage_version,scaling_factor,token_address));
        return deployRemoteCall(Confidential_token.class, web3j, transactionManager, contractGasProvider, encodedConstructor, chainId);
    }

    public static RemoteCall<Confidential_token> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, BigInteger initialVonValue, Long chainId, String name, String symbol, WasmAddress registry_address, Uint32 validator_version, Uint32 storage_version, Uint128 scaling_factor, WasmAddress token_address) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList(name,symbol,registry_address,validator_version,storage_version,scaling_factor,token_address));
        return deployRemoteCall(Confidential_token.class, web3j, credentials, contractGasProvider, encodedConstructor, initialVonValue, chainId);
    }

    public static RemoteCall<Confidential_token> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, BigInteger initialVonValue, Long chainId, String name, String symbol, WasmAddress registry_address, Uint32 validator_version, Uint32 storage_version, Uint128 scaling_factor, WasmAddress token_address) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList(name,symbol,registry_address,validator_version,storage_version,scaling_factor,token_address));
        return deployRemoteCall(Confidential_token.class, web3j, transactionManager, contractGasProvider, encodedConstructor, initialVonValue, chainId);
    }

    public static Confidential_token load(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        return new Confidential_token(contractAddress, web3j, credentials, contractGasProvider, chainId);
    }

    public static Confidential_token load(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        return new Confidential_token(contractAddress, web3j, transactionManager, contractGasProvider, chainId);
    }

    public static class PrivacyRevertEventEventResponse {
        public Log log;

        public String arg1;
    }

    public static class TransferEventEventResponse {
        public Log log;

        public String topic1;

        public String topic2;

        public Uint128 arg1;
    }

    public static class ApprovalEventEventResponse {
        public Log log;

        public String topic1;

        public String topic2;

        public Uint128 arg1;
    }

    public static class BurnEventEventResponse {
        public Log log;

        public byte[] arg1;

        public Uint128 arg2;
    }

    public static class ApproveEventEventResponse {
        public Log log;

        public String topic;

        public byte[] arg1;
    }

    public static class CreateNoteEventEventResponse {
        public Log log;

        public String topic1;

        public String topic2;

        public byte[] arg1;
    }

    public static class DestroyNoteEventEventResponse {
        public Log log;

        public String topic1;

        public String topic2;

        public byte[] arg1;
    }

    public static class MetaDataEventEventResponse {
        public Log log;

        public String topic;

        public byte[] arg1;
    }

    public static class MintEventEventResponse {
        public Log log;

        public byte[] arg1;

        public Uint128 arg2;
    }
}
