
plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

/*buildscript {
}*/

repositories {
    maven {url "http://maven.aliyun.com/nexus/content/groups/public/"}
    maven {url "https://sdk.platon.network/nexus/content/groups/public/"}
    maven {url "https://mvnrepository.com/artifact/net.java.dev.jna/jna"}

    mavenCentral()
}
test {
    useJUnitPlatform()
}
dependencies {
    compile "com.alaya.client:alaya-core:0.14.0.0"
    compile group: 'com.google.guava', name: 'guava', version: '11.0.2'
    compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.65.01'
    compile group: 'com.nativelibs4java', name: 'jnaerator', version: '0.12'
    compile ('org.mariadb.jdbc:mariadb-java-client:1.1.8') {
        exclude group: 'net.java.dev.jna'
    }
    compile 'net.java.dev.jna:jna:4.1.0'
    compile 'net.java.dev.jna:jna-platform:4.1.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'

    testCompile group: 'org.yaml', name: 'snakeyaml', version: '1.21'
    testCompile group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.6.2'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version:'5.6.2'
    testCompile group: 'org.junit.vintage', name: 'junit-vintage-engine', version:'5.6.2'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version:'5.6.2'
    testCompile group: 'commons-codec', name: 'commons-codec', version: '1.5'
    testCompile group: 'com.github.docker-java', name: 'docker-java', version: '3.2.5'
    // https://mvnrepository.com/artifact/org.testcontainers/testcontainers
    testCompile group: 'org.testcontainers', name: 'testcontainers', version: '1.15.0-rc2'


}
sourceCompatibility = '1.8'

jar {
    enabled = true
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

tasks.withType(Test) {
    systemProperty "java.library.path", "$projectDir/ConfidentialTransaction/target/debug"
}


task gitClone(type: Exec) {
    description 'git clone.'
    commandLine "git", "clone", "-b", "develop", "http://192.168.9.66/PlatON-Crypto/ConfidentialTransaction.git"
}

task compileConfidentialTransaction(type: Exec) {
    workingDir "$projectDir/ConfidentialTransaction"
    description 'comlile ConfidentialTransaction.'
    dependsOn 'gitClone'
    commandLine "cargo", "build"
}

// compileJava.dependsOn compileConfidentialTransaction

